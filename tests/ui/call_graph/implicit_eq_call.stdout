
@@@ call graph @@@

entry points:

test test_implicit_eq_call
  -> <ImplsEq as std::cmp::PartialEq>::eq at tests/ui/call_graph/implicit_eq_call.rs:12:5: 12:40 (#0)
test test_implicit_ne_call
  -> <ImplsEq as std::cmp::PartialEq>::ne at tests/ui/call_graph/implicit_eq_call.rs:17:5: 17:40 (#0)

nested calls at distance 1:

<ImplsEq as std::cmp::PartialEq>::eq at tests/ui/call_graph/implicit_eq_call.rs:12:5: 12:40 (#0)
  -> eq_impl at tests/ui/call_graph/implicit_eq_call.rs:8:1: 8:13 (#0)
<ImplsEq as std::cmp::PartialEq>::ne at tests/ui/call_graph/implicit_eq_call.rs:17:5: 17:40 (#0)
  -> ne_impl at tests/ui/call_graph/implicit_eq_call.rs:9:1: 9:13 (#0)

@@@ targets @@@

tests -(1)-> eq_impl at tests/ui/call_graph/implicit_eq_call.rs:8:1: 8:13 (#0)
  (1) test_implicit_eq_call

tests -(1)-> ne_impl at tests/ui/call_graph/implicit_eq_call.rs:9:1: 9:13 (#0)
  (1) test_implicit_ne_call

tests -(0)-> <ImplsEq as std::cmp::PartialEq>::eq at tests/ui/call_graph/implicit_eq_call.rs:12:5: 12:40 (#0)
  (0) test_implicit_eq_call

tests -(0)-> <ImplsEq as std::cmp::PartialEq>::ne at tests/ui/call_graph/implicit_eq_call.rs:17:5: 17:40 (#0)
  (0) test_implicit_ne_call

targets: 4 total; 4 safe; 0 unsafe (0 tainted)
